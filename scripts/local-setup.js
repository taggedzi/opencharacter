var Database = require("better-sqlite3");
var fs = require("fs");
var path = require("path");
var crypto = require("crypto");
// === CONFIGURATION ===
var DATA_DIR = path.resolve("./local");
var DB_PATH = path.join(DATA_DIR, "opencharacter.sqlite");
var ENV_PATH = path.resolve(".env");
// === Ensure data directory exists ===
if (!fs.existsSync(DATA_DIR)) {
    fs.mkdirSync(DATA_DIR, { recursive: true });
    console.log("Created data directory: ".concat(DATA_DIR));
}
// === Initialize SQLite Database ===
var db = new Database(DB_PATH);
console.log("\nUsing SQLite database at: ".concat(DB_PATH, "\n"));
// === Example Table Creation (Expand for Your Schema) ===
db.exec("\nCREATE TABLE \"account\" (\n\t\"userId\" text NOT NULL,\n\t\"type\" text NOT NULL,\n\t\"provider\" text NOT NULL,\n\t\"providerAccountId\" text NOT NULL,\n\t\"refresh_token\" text,\n\t\"access_token\" text,\n\t\"expires_at\" integer,\n\t\"token_type\" text,\n\t\"scope\" text,\n\t\"id_token\" text,\n\t\"session_state\" text,\n\tPRIMARY KEY(\"provider\", \"providerAccountId\"),\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE TABLE \"authenticator\" (\n\t\"credentialID\" text NOT NULL,\n\t\"userId\" text NOT NULL,\n\t\"providerAccountId\" text NOT NULL,\n\t\"credentialPublicKey\" text NOT NULL,\n\t\"counter\" integer NOT NULL,\n\t\"credentialDeviceType\" text NOT NULL,\n\t\"credentialBackedUp\" integer NOT NULL,\n\t\"transports\" text,\n\tPRIMARY KEY(\"userId\", \"credentialID\"),\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE TABLE \"session\" (\n\t\"sessionToken\" text PRIMARY KEY NOT NULL,\n\t\"userId\" text NOT NULL,\n\t\"expires\" integer NOT NULL,\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE TABLE \"user\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"name\" text,\n\t\"email\" text,\n\t\"emailVerified\" integer,\n\t\"image\" text\n);\n\nCREATE TABLE \"verificationToken\" (\n\t\"identifier\" text NOT NULL,\n\t\"token\" text NOT NULL,\n\t\"expires\" integer NOT NULL,\n\tPRIMARY KEY(\"identifier\", \"token\")\n);\n\nCREATE UNIQUE INDEX \"authenticator_credentialID_unique\" ON \"authenticator\" (\"credentialID\");\nCREATE UNIQUE INDEX \"user_email_unique\" ON \"user\" (\"email\");\n\nCREATE TABLE \"character\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"name\" text NOT NULL,\n\t\"tagline\" text NOT NULL,\n\t\"description\" text NOT NULL,\n\t\"greeting\" text NOT NULL,\n\t\"visibility\" text NOT NULL,\n\t\"userId\" text NOT NULL,\n\t\"interactionCount\" integer DEFAULT 0 NOT NULL,\n\t\"likeCount\" integer DEFAULT 0 NOT NULL,\n\t\"tags\" text DEFAULT '[]' NOT NULL,\n\t\"createdAt\" integer NOT NULL,\n\t\"updatedAt\" integer NOT NULL,\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nALTER TABLE \"character\" ADD \"avatar_image_url\" text;\n\nCREATE TABLE \"chat_session\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"user_id\" text NOT NULL,\n\t\"character_id\" text NOT NULL,\n\t\"messages\" text NOT NULL,\n\t\"interaction_count\" integer DEFAULT 0 NOT NULL,\n\t\"last_message_timestamp\" integer NOT NULL,\n\t\"created_at\" integer NOT NULL,\n\t\"updated_at\" integer NOT NULL,\n\tFOREIGN KEY (\"user_id\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade,\n\tFOREIGN KEY (\"character_id\") REFERENCES \"character\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE INDEX \"user_character_idx\" ON \"chat_session\" (\"user_id\",\"character_id\");\n\nALTER TABLE \"character\" ADD \"banner_image_url\" text;\n\nALTER TABLE \"character\" ADD \"temperature\" real;\nALTER TABLE \"character\" ADD \"top_p\" real;\nALTER TABLE \"character\" ADD \"top_k\" integer;\nALTER TABLE \"character\" ADD \"frequency_penalty\" real;\nALTER TABLE \"character\" ADD \"presence_penalty\" real;\nALTER TABLE \"character\" ADD \"repetition_penalty\" real;\nALTER TABLE \"character\" ADD \"min_p\" real;\nALTER TABLE \"character\" ADD \"top_a\" real;\nALTER TABLE \"character\" ADD \"max_tokens\" integer;\n\nCREATE TABLE \"group_chat_session_characters\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"sessionId\" text NOT NULL,\n\t\"characterId\" text NOT NULL,\n\t\"createdAt\" integer NOT NULL,\n\tFOREIGN KEY (\"sessionId\") REFERENCES \"group_chat_sessions\"(\"id\") ON UPDATE no action ON DELETE cascade,\n\tFOREIGN KEY (\"characterId\") REFERENCES \"character\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE TABLE \"group_chat_sessions\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"roomId\" text NOT NULL,\n\t\"userId\" text NOT NULL,\n\t\"messages\" text DEFAULT '[]' NOT NULL,\n\t\"createdAt\" integer NOT NULL,\n\t\"updatedAt\" integer NOT NULL,\n\tFOREIGN KEY (\"roomId\") REFERENCES \"room\"(\"id\") ON UPDATE no action ON DELETE cascade,\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE TABLE \"room_characters\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"roomId\" text NOT NULL,\n\t\"characterId\" text NOT NULL,\n\t\"createdAt\" integer NOT NULL,\n\tFOREIGN KEY (\"roomId\") REFERENCES \"room\"(\"id\") ON UPDATE no action ON DELETE cascade,\n\tFOREIGN KEY (\"characterId\") REFERENCES \"character\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE TABLE \"room\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"name\" text NOT NULL,\n\t\"topic\" text,\n\t\"visibility\" text DEFAULT 'public' NOT NULL,\n\t\"userId\" text NOT NULL,\n\t\"interactionCount\" integer DEFAULT 0 NOT NULL,\n\t\"likeCount\" integer DEFAULT 0 NOT NULL,\n\t\"createdAt\" integer NOT NULL,\n\t\"updatedAt\" integer NOT NULL,\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE TABLE \"persona\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"userId\" text NOT NULL,\n\t\"displayName\" text NOT NULL,\n\t\"background\" text NOT NULL,\n\t\"isDefault\" integer DEFAULT false NOT NULL,\n\t\"createdAt\" integer NOT NULL,\n\t\"updatedAt\" integer NOT NULL,\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nALTER TABLE \"user\" ADD \"bio\" text;\n\nALTER TABLE \"persona\" ADD \"image\" text;\n\nALTER TABLE \"chat_session\" ADD \"summary\" text;\n\nALTER TABLE \"chat_session\" ADD \"share\" integer;\n\nCREATE TABLE \"social_submission\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"name\" text NOT NULL,\n\t\"email\" text NOT NULL,\n\t\"text\" text NOT NULL,\n\t\"message\" text,\n\t\"createdAt\" integer NOT NULL\n);\n\nCREATE TABLE \"stripe_customer_id\" (\n\t\"userId\" text PRIMARY KEY NOT NULL,\n\t\"stripeCustomerId\" text NOT NULL,\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE TABLE \"subscription\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"userId\" text NOT NULL,\n\t\"stripeCustomerId\" text NOT NULL,\n\t\"stripeSubscriptionId\" text NOT NULL,\n\t\"stripePriceId\" text NOT NULL,\n\t\"stripeCurrentPeriodStart\" integer NOT NULL,\n\t\"stripeCurrentPeriodEnd\" integer NOT NULL,\n\t\"status\" text NOT NULL,\n\t\"planType\" text NOT NULL,\n\t\"cancelAtPeriodEnd\" integer DEFAULT false NOT NULL,\n\t\"createdAt\" integer NOT NULL,\n\t\"updatedAt\" integer NOT NULL,\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE UNIQUE INDEX \"stripe_customer_id_stripeCustomerId_unique\" ON \"stripe_customer_id\" (\"stripeCustomerId\");\nCREATE INDEX \"subscription_user_id_idx\" ON \"subscription\" (\"userId\");\nCREATE INDEX \"subscription_stripe_customer_id_idx\" ON \"subscription\" (\"stripeCustomerId\");\nCREATE INDEX \"subscription_stripe_subscription_id_idx\" ON \"subscription\" (\"stripeSubscriptionId\");\n\nCREATE UNIQUE INDEX \"subscription_userId_unique\" ON \"subscription\" (\"userId\");\n\nCREATE TABLE \"user_daily_requests\" (\n\t\"id\" text PRIMARY KEY DEFAULT (uuid()) NOT NULL,\n\t\"user_id\" text NOT NULL,\n\t\"date\" text NOT NULL,\n\t\"request_count\" integer DEFAULT 0 NOT NULL,\n\t\"created_at\" integer DEFAULT CURRENT_TIMESTAMP NOT NULL,\n\t\"updated_at\" integer DEFAULT CURRENT_TIMESTAMP NOT NULL\n);\n\nCREATE TABLE \"twitter_roast\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"username\" text NOT NULL,\n\t\"roastContent\" text NOT NULL,\n\t\"userId\" text,\n\t\"likeCount\" integer DEFAULT 0 NOT NULL,\n\t\"createdAt\" integer NOT NULL,\n\t\"updatedAt\" integer NOT NULL,\n\tFOREIGN KEY (\"userId\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nCREATE INDEX \"twitter_roast_username_idx\" ON \"twitter_roast\" (\"username\");\nCREATE INDEX \"twitter_roast_user_id_idx\" ON \"twitter_roast\" (\"userId\");\n\nALTER TABLE \"user\" ADD \"pay_as_you_go\" integer DEFAULT false NOT NULL;\n\nCREATE TABLE \"user_credits\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"user_id\" text NOT NULL,\n\t\"balance\" real DEFAULT 0 NOT NULL,\n\t\"last_updated\" integer DEFAULT CURRENT_TIMESTAMP NOT NULL,\n\tFOREIGN KEY (\"user_id\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nALTER TABLE \"chat_session\" ADD \"title\" text;\n\nCREATE TABLE \"referral\" (\n\t\"id\" text PRIMARY KEY NOT NULL,\n\t\"referrer_id\" text NOT NULL,\n\t\"referred_id\" text NOT NULL,\n\t\"signup_date\" integer NOT NULL,\n\t\"attribution_expires\" integer NOT NULL,\n\t\"status\" text DEFAULT 'pending' NOT NULL,\n\t\"pro_conversion_date\" integer,\n\t\"total_earnings\" real DEFAULT 0 NOT NULL,\n\t\"last_payment_date\" integer,\n\t\"last_payment_amount\" real,\n\t\"last_payment_status\" text,\n\t\"payment_history\" text DEFAULT '[]' NOT NULL,\n\t\"created_at\" integer NOT NULL,\n\t\"updated_at\" integer NOT NULL,\n\tFOREIGN KEY (\"referrer_id\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade,\n\tFOREIGN KEY (\"referred_id\") REFERENCES \"user\"(\"id\") ON UPDATE no action ON DELETE cascade\n);\n\nALTER TABLE \"user\" ADD \"referral_link\" text;\nALTER TABLE \"user\" ADD \"paypal_email\" text;\nCREATE INDEX \"referral_referrer_idx\" ON \"referral\" (\"referrer_id\");\nCREATE INDEX \"referral_referred_idx\" ON \"referral\" (\"referred_id\");\nCREATE INDEX \"unique_referral_idx\" ON \"referral\" (\"referrer_id\",\"referred_id\");\n\n");
console.log("✅ Database initialized and core tables created.");
// === Generate NEXTAUTH_SECRET if missing ===
function generateSecret(length) {
    if (length === void 0) { length = 32; }
    return crypto.randomBytes(length).toString("hex").slice(0, length);
}
var envContent = "";
if (fs.existsSync(ENV_PATH)) {
    envContent = fs.readFileSync(ENV_PATH, "utf-8");
}
if (!/NEXTAUTH_SECRET\s*=/.test(envContent)) {
    var secret = generateSecret(32);
    fs.appendFileSync(ENV_PATH, "\nNEXTAUTH_SECRET=".concat(secret, "\n"));
    console.log("✅ NEXTAUTH_SECRET generated and added to .env");
}
else {
    console.log("✅ NEXTAUTH_SECRET already exists in .env");
}
console.log("\n🎉 Local setup complete! You can now run: bun run dev\n");
